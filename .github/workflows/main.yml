name: Build FitnessApp.ContactsApi image

on:
  push:
    branches:
    - master
    - develop
    
env:
  API_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/fitness-app-contacts-api
  HANDLER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/fitness-app-contacts-category-handler
    
      
jobs:
  build:
    runs-on: ubuntu-latest
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}

    services:
      mongo-db:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mongo_container
      nats:
        image: nats
        ports:
          - 4222:4222

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
       dotnet-version: 8.0.x
        
    - name: Prepare package
      run: dotnet nuget add source --username voldovgan2 --password ${{ secrets.PACKAGE_SOURCE_PASSWORD }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/voldovgan2/index.json"
            
    - name: Restore dependencies
      run: dotnet restore
        
    - name: Build project 
      run: dotnet build FitnessApp.ContactsApi.sln -c Release --no-restore
      
    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      env:
        MONGOCONNECTIONSTRING: mongodb://127.0.0.1:27017
        NATSCONNECTIONSTRING: nats://127.0.0.1:4222
      
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '0 100'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Extract Metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DH_REPO_NAME}}
        tags: |
          type=semver,pattern={{version}}

    - name: Build and push Contacts.API
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          TAG="alpha"
          docker buildx build --tag $API_IMAGE_NAME:alpha --file ./Contacts.API.Dockerfile . --push
        elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
          TAG="latest"
          COMMIT_HASH=$(git rev-parse --short HEAD)
          docker buildx build --tag $HANDLER_IMAGE_NAME:$TAG --tag $HANDLER_IMAGE_NAME:$COMMIT_HASH . --push
          exit 0
        fi
        
    - name: Build and push develop for Contacts.ContactsCategoryHandler
      if: github.ref == 'refs/heads/develop'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Contacts.ContactsCategoryHandler.Dockerfile 
        build-args: |
          NUGET_PAT=${{ secrets.PACKAGE_SOURCE_PASSWORD }}
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/fitness-app-contacts-category-handler:alpha
        
    - name: Build and push latest for Contacts.API
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Contacts.API.Dockerfile 
        build-args: |
          NUGET_PAT=${{ secrets.PACKAGE_SOURCE_PASSWORD }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        
    - name: Build and push latest for Contacts.ContactsCategoryHandler
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Contacts.ContactsCategoryHandler.Dockerfile 
        build-args: |
          NUGET_PAT=${{ secrets.PACKAGE_SOURCE_PASSWORD }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
